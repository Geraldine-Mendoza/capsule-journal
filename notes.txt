- use nodemon to start project so it automatically restarts your browser with all changes
	- nodemon index

- open a terminal window and start mongodb server with "brew services restart mongodb-community" then connect and use mongodb with "mongo"

- npm install mongoose --save, npm install body-parser --save
	- body parse is for parsing data from incoming requests like form data via urlencode

- using embedded documents in users account:
	that is, 
	patron {
		address: { object }
	}

- username: communism4win
	password: ????

- username: marbleslost
	password: marbleswon

- cookies, sessions for data: 
	https://medium.com/@ravaeimohamad/send-data-between-different-routes-in-nodejs-using-sessions-774a7a95189e

<!--<<div class="row">
    <% entries.forEach((entry) => { %>
        <div class="col">
        <div class="card" id='<%= entry._id %>'>
            <div class="card-header">
                <h3>Day 12</h3>
            </div>
        <div class="card-body">
            <div class="card-title"><%= entry.title %> </div>
            <p class="card-text"><%=entry.content.slice(0,150)%>
            <% if(entry.content.length > 150) {%>
            ...</p>
            <%}%>     
        </div>
        </div>
        </div>
    <% }) %>
</div>-->


<!--<% if (messages.error) { %>
    <% messages.error %>
<% } %>-->

	// TODO
		// on error....
		if(err) {
			return res.status(500).json({error: "Unauthorized"})
		}
		// auth failed
		if(!passportUser) {
			console.log(`auth failed due to user ${passportUser}`); return res.redirect('/login'); }
		if(passportUser) {
			const user = passportUser;
			user.token = passportUser.generateJWT();
			res.json({
				message: "successfully logged in to account:",
				user: user.toAuthJSON() // print important info in res
			});
			res.redirect('/users/' + user.username);

			//jwt.verify()
		}
	})(req, res, next); 

- some color vibes
#e8f1f4
#e8ebf4
#ebe8f4
#f1e8f4
#f4e8f1
#f4e8eb


#D282A6 - pink add fab button

- does opening diff connections for each collection (/model??) make any difference??
	- the reason this wasn't working was 
	1. req.user_id is not defined
	2. a brackets issue with findOne(), which i changed to findById


- name on button will add a ~query to the url, so ?button_name=... will be in url... can this be helpful?